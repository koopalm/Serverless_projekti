AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  week8-project3

Parameters:
  Subemail: 
    Type: String
    Default: no@email.given


Resources:
  Project3Group3DynamoDB: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "id"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "id"
          KeyType: "HASH"
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: "Project3Group3Table"
            
  CRUDGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: crudGet.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        MyResourcesLambdaScanDynamodb:
          Type: Api
          Properties:
            Path: /
            Method: get

  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "DailyMotivationSeries"
      KmsMasterKeyId: alias/aws/sns

  MySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref Subemail
      Protocol: email
      TopicArn: !Ref MySNSTopic

  ScheduledLambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      CodeUri: lambda/
      Handler: scheduled.lambda_handler
      Description: Run once a day cron schedule
      Policies:
        - AmazonSNSFullAccess
        - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          snsarn: !Ref MySNSTopic
      Events:
        CronEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 6 ? * * *)
            Name: CronSchedule
            Description: Trigger Lambda at 6.00 AM daily

Outputs:
  ProdAPIGatewayURL:
    Description: "Prod API Gateway URL for testing"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"